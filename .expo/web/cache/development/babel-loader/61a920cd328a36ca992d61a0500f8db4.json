{"ast":null,"code":"var _jsxFileName = \"/Users/nmicjime/Desktop/TLG_ReactNative_Project/views/game/renderers.js\";\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport rocket from \"../../assets/images/rocketwithflames.gif\";\nimport satellite from \"../../assets/images/satellite.png\";\nimport planet from \"../../assets/images/planet.png\";\nimport ufo from \"../../assets/images/ufo.gif\";\nimport star from \"../../assets/images/star.png\";\nimport styles from \"./renderers-styles\";\n\nvar Rocket = function Rocket(_ref) {\n  var body = _ref.body,\n      size = _ref.size;\n  var position = body.position;\n  var sizeWidth = size[0];\n  var sizeHeight = size[1];\n  var x = position.x - sizeWidth / 2;\n  var y = position.y;\n  return React.createElement(Image, {\n    source: rocket,\n    style: [styles.rocket, {\n      left: x,\n      top: y,\n      width: sizeWidth,\n      height: sizeHeight\n    }],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 5\n    }\n  });\n};\n\nvar Satellite = function Satellite(_ref2) {\n  var body = _ref2.body,\n      size = _ref2.size;\n  var position = body.position;\n  var sizeWidth = size[0];\n  var sizeHeight = size[1];\n  var x = position.x - sizeWidth / 2;\n  var y = position.y;\n  return React.createElement(Image, {\n    source: satellite,\n    style: [styles.satellite, {\n      left: x,\n      top: y,\n      width: sizeWidth,\n      height: sizeHeight\n    }],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }\n  });\n};\n\nvar Planet = function Planet(_ref3) {\n  var body = _ref3.body,\n      size = _ref3.size;\n  var sizeWidth = size[0];\n  var sizeHeight = size[1];\n  var position = body.position;\n  var x = position.x - sizeWidth / 2;\n  var y = position.y;\n  return React.createElement(Image, {\n    source: planet,\n    style: [styles.satellite, {\n      left: x,\n      top: y,\n      width: sizeWidth,\n      height: sizeHeight\n    }],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 5\n    }\n  });\n};\n\nvar Star = function Star(_ref4) {\n  var body = _ref4.body,\n      size = _ref4.size,\n      opacity = _ref4.opacity;\n  var sizeWidth = size[0];\n  var sizeHeight = size[1];\n  var x = body.position.x - sizeWidth / 2;\n  var y = body.position.y - sizeHeight / 2;\n  return React.createElement(Image, {\n    source: star,\n    style: [styles.star, {\n      left: x,\n      top: y,\n      width: sizeWidth,\n      height: sizeHeight,\n      opacity: opacity\n    }],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 5\n    }\n  });\n};\n\nvar UFO = function UFO(_ref5) {\n  var body = _ref5.body,\n      size = _ref5.size;\n  var sizeWidth = size[0];\n  var sizeHeight = size[1];\n  var x = body.position.x - sizeWidth / 2;\n  var y = body.position.y - sizeHeight / 2;\n  return React.createElement(Image, {\n    source: ufo,\n    style: [styles.ufo, {\n      left: x,\n      top: y\n    }],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 5\n    }\n  });\n};\n\nvar Floor = function Floor(_ref6) {\n  var body = _ref6.body,\n      size = _ref6.size;\n  var width = size[0];\n  var height = size[1];\n  var x = body.position.x - width / 2;\n  var y = body.position.y - height / 2;\n  return React.createElement(View, {\n    style: {\n      position: 'absolute',\n      left: x,\n      top: y,\n      width: width,\n      height: height,\n      backgroundColor: 'transparent'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 5\n    }\n  });\n};\n\nexport { Rocket, Floor, Star, Satellite, Planet, UFO };","map":{"version":3,"sources":["/Users/nmicjime/Desktop/TLG_ReactNative_Project/views/game/renderers.js"],"names":["React","rocket","satellite","planet","ufo","star","styles","Rocket","body","size","position","sizeWidth","sizeHeight","x","y","left","top","width","height","Satellite","Planet","Star","opacity","UFO","Floor","backgroundColor"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { View, Image } from 'react-native';\n\nimport rocket from '../../assets/images/rocketwithflames.gif';\nimport satellite from '../../assets/images/satellite.png';\nimport planet from '../../assets/images/planet.png';\nimport ufo from '../../assets/images/ufo.gif';\nimport star from '../../assets/images/star.png';\n\nimport styles from './renderers-styles';\n\nconst Rocket = ({ body, size }) => {\n  const { position } = body;\n  const sizeWidth = size[0];\n  const sizeHeight = size[1];\n  const x = position.x - sizeWidth / 2;\n  const { y } = position;\n\n  return (\n    <Image\n      source={rocket}\n      style={[\n        styles.rocket,\n        {\n          left: x,\n          top: y,\n          width: sizeWidth,\n          height: sizeHeight,\n        },\n      ]}\n    />\n  );\n};\n\nconst Satellite = ({ body, size }) => {\n  const { position } = body;\n  const sizeWidth = size[0];\n  const sizeHeight = size[1];\n  const x = position.x - sizeWidth / 2;\n  const { y } = position;\n\n  return (\n    <Image\n      source={satellite}\n      style={[\n        styles.satellite,\n        {\n          left: x,\n          top: y,\n          width: sizeWidth,\n          height: sizeHeight,\n        },\n      ]}\n    />\n  );\n};\n\nconst Planet = ({ body, size }) => {\n  const sizeWidth = size[0];\n  const sizeHeight = size[1];\n  const { position } = body;\n  const x = position.x - sizeWidth / 2;\n  const { y } = position;\n\n  return (\n    <Image\n      source={planet}\n      style={[\n        styles.satellite,\n        {\n          left: x,\n          top: y,\n          width: sizeWidth,\n          height: sizeHeight,\n        },\n      ]}\n    />\n  );\n};\n\nconst Star = ({ body, size, opacity }) => {\n  const sizeWidth = size[0];\n  const sizeHeight = size[1];\n  const x = body.position.x - sizeWidth / 2;\n  const y = body.position.y - sizeHeight / 2;\n\n  return (\n    <Image\n      source={star}\n      style={[\n        styles.star,\n        {\n          left: x,\n          top: y,\n          width: sizeWidth,\n          height: sizeHeight,\n          opacity,\n        },\n      ]}\n    />\n  );\n};\n\nconst UFO = ({ body, size }) => {\n  const sizeWidth = size[0];\n  const sizeHeight = size[1];\n  const x = body.position.x - sizeWidth / 2;\n  const y = body.position.y - sizeHeight / 2;\n\n  return (\n    <Image\n      source={ufo}\n      style={[\n        styles.ufo,\n        {\n          left: x,\n          top: y,\n        },\n      ]}\n    />\n  );\n};\n\nconst Floor = ({ body, size }) => {\n  const width = size[0];\n  const height = size[1];\n\n  const x = body.position.x - width / 2;\n  const y = body.position.y - height / 2;\n\n  return (\n    <View\n      style={{\n        position: 'absolute',\n        left: x,\n        top: y,\n        width,\n        height,\n        backgroundColor: 'transparent',\n      }}\n    />\n  );\n};\n\nexport { Rocket, Floor, Star, Satellite, Planet, UFO };\n"]},"metadata":{},"sourceType":"module"}